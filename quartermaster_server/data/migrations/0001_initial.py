# Generated by Django 3.0.1 on 2019-12-21 22:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('name', models.SlugField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('name', models.SlugField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('last_check_in', models.DateTimeField(blank=True, null=True)),
                ('last_reserved', models.DateTimeField(blank=True, null=True)),
                ('used_for', models.CharField(blank=True, max_length=30, null=True)),
                ('use_password', models.CharField(blank=True, help_text='Random password needed to request access to devices in this resource', max_length=30, null=True)),
                ('enabled', models.BooleanField(default=True)),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.Pool')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('everything', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('driver', models.CharField(choices=[], max_length=100)),
                ('config_json', models.TextField()),
                ('name', models.SlugField(max_length=30, primary_key=True, serialize=False)),
                ('online', models.BooleanField(default=True)),
                ('resource', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Resource')),
            ],
            managers=[
                ('everything', django.db.models.manager.Manager()),
            ],
        ),
    ]
